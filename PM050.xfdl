/**
*  SYSTEM FORM NAME
*
*  @MenuPath    pm > PM050
*  @FileName    PM050.xfdl 
*  @Creator     김대승
*  @CreateDate  2019.08.23 
*  @Version     1.0
*  @Desction    프로젝트 사용자관리
* 
************** 소스 수정 이력 *************************************************
*    date          Modifier            Description
*******************************************************************************
*  2019.08.23      김대승             최초 생성 
*  2020.04.03      고영민             사용자 여럿 저장시 프로젝트코드 넣도록 수정
*******************************************************************************
*/

//공통 라이브러리 호출

/*********************************************************
 * 1.1 FORM 변수 선언 영역
 ********************************************************/
this.fv_sGdsProjectCd = UXBooster.av_sProjectCd;  		 				// 글로변 변수_프로젝트코드
/*********************************************************
* 1.2 FORM EVENT 영역(onload)
********************************************************/
/**
* Form_onload 최초 로드시 발생되는 이벤트 (필수)
*/
this.PM050_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
   if (take.formOnLoad(this)) //공통 온로드(필수) : 최초 온로드시 공통으로 호출되는 함수 --> 필수
   {    
        this.fnInit();
   }
}

/*********************************************************
* 2 필수 FUNCTION 영역 (fnSearch, fnSave, fnAddRow, fnDelRow)
********************************************************/
/**
 * fnSearch : 조회 transaction (필수) --> 공통 조회에서 호출할 디폴트값 세팅 필요
 * @param  {String} sTranId 트랜젝션 아이디
 * @return {N/A}    N/A
 * @example this.fnSearch("ID");
 */
this.fnSearch = function(sTranId)
{
    //공통 조회에서 호출할 디폴트값 세팅 필요
    if (take.nvl(sTranId, "")=="") sTranId = "projectUserList";
	
	takeval.add(this, "Search", this.divSearch.form.cboProjectNm, "프로젝트", "value", true, "string", "", "");
	if(!takeval.check(this, "Search")) return;
	
	var objDivSearch = this.divSearch.form;
    switch(sTranId) {
		case "projectUserList":
			this.dsProjectUserList.clearData();
			var sProjectCd = take.nvl(objDivSearch.cboProjectNm.value, "");	// 프로젝트명
			var sRoleCd    = take.nvl(objDivSearch.cboRole.value, "");		// 권한
			var sUserCd    = take.nvl(objDivSearch.edtUser.value, "");		// 사용자
			take.tranSelect
			(
				this, 
				"projectUserList", 
				"ProjectManagement.projectUserList", 
				"", 
				"dsProjectUserList", 
				"PROJECT_CD='" + sProjectCd + "' ROLE_CD='" + sRoleCd + "' USER_CD='" + sUserCd + "'",
				"fnCallback"
			)
		break;
	}
}

/**
 * fnSave : 저장 transaction (필수) -->공통 저장에서 호출할 디폴트값 세팅 필요
 * @param  {String} sTranId 트랜젝션 아이디
 * @return {N/A}    N/A
 * @example this.fnSave("ID");
 */
this.fnSave = function(sTranId)
{    
    //공통 조회에서 호출할 디폴트값 세팅 필요
    if (take.nvl(sTranId, "")=="") sTranId = "projectUserSave";
	
	if ( !take.isDsModified(this.dsProjectUserList) )
	{
		take.alert(this, "info", "변경된 내역이 없습니다.");
		return;
	}
	
	switch(sTranId) {
		// 저장
		case "projectUserSave":
			var sProjectCd 	= take.nvl(this.divSearch.form.cboProjectNm.value, "");
			var objDs = this.dsProjectUserList;
			var nCnt  = objDs.rowcount;
			
			// 권한 선택 메시지
			for(var i=0; i<nCnt; i++)
			{
				if ( take.nvl(objDs.getColumn(i, "ROLE_CD"), "") == "" )
				{
					take.alert(this, "info", "권한을 선택해 주시기 바랍니다.");
					return;
				}
			}
			
			//this.dsProjectUserList.setColumn(this.dsProjectUserList.rowposition, "PROJECT_CD", sProjectCd)
			//take.tranSave
			//(
			//	this, 
			//	"projectUserSave", 
			//	"ProjectManagement.projectUser",  
			//	"dsProjectUserList", 
			//	"", 
			//	"",
			//	"fnCallback"
			//)
			break;
			
		// 삭제
		case "projectUserDelete":
			//take.tranSave
			//(
			//	this, 
			//	"projectUserDelete", 
			//	"ProjectManagement.projectUser", 
			//	"dsProjectUserList", 
			//	"", 
			//	"",
			//	"fnCallback"
			//)
			break;
		default:
	}
	
	take.transaction
	(
		this
		, sTranId
		, "SVC_LOC::pm/projectUserSave.do"
		, "dsProjectUserList=dsProjectUserList:U"
		, ""
		, ""
		, "fnCallback"
	);
}
/**
 * fnAddRow : 행 추가 함수 (필수)--> 공통 행추가에서 호출할 디폴트값 세팅 필요
 * @param  {String} sGridId 그리드 아이디
 * @param  {Number} nRow    addRow 리턴값(추가된 행 위치)
 * @example this.fnAddRow(sGrdId, nRow);
 */
this.fnAddRow = function(sGrdId, nRow)
{
    //공통 행추가에서 호출할 디폴트값 세팅
    if (take.nvl(sGrdId, "")=="") sGrdId = "grdUserList";
	
	var sProjectCd = this.divSearch.form.cboProjectNm.value;
    // 담당자 팝업 소스 작성
	take.openPopup(this, "PM010P01", "sys::PM010P01.xfdl", {sProjectCd:sProjectCd}, "", 
		function(sId, sCd){
			var objDs = this.dsProjectUserList;
			objDs.setColumn(objDs.rowposition, "PROJECT_CD", sProjectCd)
		},
	false);
	//this.dsProjectUserList.addRow();
}

/**
 * fnDelRow : 행 삭제 함수 (필수) --> 공통 행삭제에서 호출할 디폴트값 세팅 필요
 * @param  {String} sGridId 그리드 아이디
 * @param  {Number, Array} arrnRow    deleteRow 리턴값
 * @return {N/A} N/A
 * @example this.fnDelRow(sGrdId, nRow); 
 */
this.fnDelRow = function(sGrdId, arrnRow)
{    
    //공통 행추가에서 호출할 디폴트값 세팅
    if (take.nvl(sGrdId, "")=="") sGrdId = "grdUserList";
    
	var objDsProjUserList = this.dsProjectUserList;
	 
	if(objDsProjUserList.rowcount <= 0){
		take.alert(this, "info", "사용자가 없습니다.");
		return;
	}
	
	var nRow     = objDsProjUserList.rowposition;
	var nSelProj = objDsProjUserList.getColumn(nRow, "USER_NM");
	var bRowChange = take.confirm(this, "question", "{name}을(를) {text}하시겠습니까?", { name : nSelProj, text : "삭제"});
	
	if (bRowChange)
	{		
		objDsProjUserList.set_enableevent(false);
		objDsProjUserList.set_updatecontrol(false);
		
		objDsProjUserList.setRowType(objDsProjUserList.rowposition, "D");
		
		objDsProjUserList.set_updatecontrol(true);
		objDsProjUserList.set_enableevent(true);
		
		this.fnSave("projectUserDelete");
	}
}

/*********************************************************
 * 3 각 COMPONENT 별 EVENT 영역
  ********************************************************/
/**
* divSearch_btnProjectSearch_onclick : 프로젝트 검색 팝업 오픈
*/
this.divSearch_btnProjectSearch_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	
};

/*********************************************************
* 4 사용자 FUNCTION 영역
********************************************************/
/**
 * fnInit : 초기화 함수
 * @example this.fnUserFunction();
 */
this.fnInit = function()
{    
	// 공통 코드조회 함수 호출
    this.fnCommonCode();
	
	var sAdminYn = UXBooster.gdsUserInfo.getColumn(0, "ADMIN_YN"); 	// gds _ 관리자권한 여부
	
	// 접속한 사용자가 프로젝트 관리자인 경우에만 검색조건 프로젝트 선택 가능
	this.divSearch.form.cboProjectNm.set_value(this.fv_sGdsProjectCd);
	
	if(sAdminYn == "Y"){
		this.divSearch.form.cboProjectNm.set_readonly(false);
	}
}

/**
 * fnCommonCode : 공통 코드조회
 * @example this.fnCommonCode();
 */
this.fnCommonCode = function ()
{
	// 프로젝트 코드, 권한 코드 멀티 셀렉트
	var arrSelectCodes  = ["projectInfoCode", "ProjectManagement.projectUserRole"];
	var arrSelectNameSp = ["ProjectManagement.projectInfoCode", "ProjectManagement.projectUserRole"];
	var arrSelectOutDs  = ["dsCboProjectCd", "dsCboRole"];
	take.tranSelect
	(
		this,
		arrSelectCodes, 
		arrSelectNameSp, 
		"", 
		arrSelectOutDs, 
		"PROJECT_CD='"+this.fv_sGdsProjectCd+"'", 
		function(sId, nErrCd, sErrMsg)
		{
			var objDsCboProj = this.dsCboProjectCd;
			if (objDsCboProj.rowcount>0)
			{
				var addInsertRow = objDsCboProj.insertRow(0)
				objDsCboProj.setColumn(addInsertRow, "CODE", "");
				objDsCboProj.setColumn(addInsertRow, "NAME", "선택");
			}
			
			var objDsCboRole = this.dsCboRole;
			if (objDsCboRole.rowcount>0)
			{
				var addInsertRow1 = objDsCboRole.insertRow(0)
				objDsCboRole.setColumn(addInsertRow1, "CODE", "");
				objDsCboRole.setColumn(addInsertRow1, "NAME", "전체");
				this.divSearch.form.cboRole.set_index(0);
				
				this.dsCboRoleUser.copyData(objDsCboRole);
				this.dsCboRoleUser.setColumn(0, "NAME", "선택");
			}
			this.fnSearch("projectUserList");
		}
	)
	
};

/*********************************************************
 * 5 TRANSACTION OR CALLBACK 콜백 처리부분
 ********************************************************/
/**
* fnCallback : transaction callback
* @param  : svcId   - 서비스 아이디 (공통 콜백에서 넘어옴)
* @param  : errCd   - 에러코드 (공통 콜백에서 넘어옴)
* @param  : errMsg   - 에러메세지 (공통 콜백에서 넘어옴)
* @return : N/A
* @example :  
*/
this.fnCallback = function(sId, nErrCd, sErrMsg)
{
    //Transaction 에러는 공통에서 처리
    
    //Transaction은 성공이나 실제 처리된게 없을 경우 처리
    if( sErrMsg == "SUCC" )
    {
        //Success Script      
    } else {
        //Etc Script
    }   
    
    switch(sId)
    {
        case "projectUserList" : //조회 콜백
			if (this.dsProjectUserList.rowcount > 0){
				var nRowCount = this.dsProjectUserList.rowcount;
				this.divDetail.form.staUserListT.set_text("사용자 목록 ("+nRowCount+"건)");
			}else {
				this.divDetail.form.staUserListT.set_text("사용자 목록 (0건)");
			}
            //trace(this.dsProjectUserList.saveXML());
            break;
			
        case "projectUserSave" :   // 저장 콜백
			this.fnSearch("projectUserList");
            break;
			
        case "projectUserDelete" : // 삭제 콜백
            this.fnSearch("projectUserList");
            break;
    }        
} 

this.divSearch_cboProjectNm_onitemchanged = function(obj:nexacro.Combo,e:nexacro.ItemChangeEventInfo)
{
	this.fv_sGdsProjectCd = take.nvl(this.divSearch.form.cboProjectNm.value, "");
	this.fnCommonCode();
};

this.divSearch_edtUser_onkeyup = function(obj:nexacro.Edit,e:nexacro.KeyEventInfo)
{
	if (e.keycode == 13) {
		this.fnSearch("projectUserList");
	}
};
